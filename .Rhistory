install.packages("remotes")
remotes::install_github("nickzani/Cricinfo")
library(Cricinfo)
?Cricinfo
Cricinfo::getPlayerNumber("Ricky Ponting")
Cricinfo::getPlayerNumber("Ricky Ponting","Australia")
?Cricinfo::getPlayerInfo()
Cricinfo::getPlayerInfo("2230", BattingBowling = "Batting", ViewType = "Inn", Clean = "Y")
Cricinfo::getPlayerInfo("Ricky Ponting", "2230", BattingBowling = "Batting", ViewType = "Inn", Clean = "Y")
getPlayerInfo("Ricky Ponting", "2230", BattingBowling = "Batting", ViewType = "Inn", Clean = "Y")
Cricinfo::lifetimeBattingAverage()
?Cricinfo::lifetimeBattingAverage
playerInfo <- getPlayerInfo(PlayerNumber="11728", BattingBowling = "Batting", ViewType = "Inn", Clean="Y")
playerInfo$Average <- lifetimeBattingAverage(NOFlag=playerInfo$NOFlag, runs = playerInfo$Runs)
# Read the data
ricking_ponting <- read.csv("data/ricking_ponting_test_innings.csv")
head(ricking_ponting)
count(ricking_ponting$Runs[ricking_ponting$Runs != 'DNB'])
length(ricking_ponting$Runs[ricking_ponting$Runs != 'DNB'])
# Read the data
ricking_ponting <- read.csv("data/ricking_ponting_test_innings.csv")
head(ricking_ponting)
# Number of innings batted
length(ricking_ponting$Runs[ricking_ponting$Runs != 'DNB'])
# Total runs scored
sum(ricking_ponting$Runs[ricking_ponting$Runs != 'DNB'])
ricking_ponting$Runs[ricking_ponting$Runs != 'DNB']
library(tidyverse)
ricking_ponting <- read_csv(file = 'data/ricky_ponting_test_innings.csv')
ricking_ponting
ricking_ponting <- read_csv(file = 'data/ricky_ponting_test_innings.csv')
ricking_ponting <- read_csv("data/ricking_ponting_test_innings.csv")
ricking_ponting <- read_csv("data/ricking_ponting_test_innings.csv")
ricking_ponting <- read_csv("data/ricking_ponting_test_innings.csv")
ricking_ponting %>% filter(Runs != 'DNB')
ricking_ponting %>% mutate(TrueRuns = str_replace(Runs, "*", ""))
ricking_ponting %>% mutate(TrueRuns = str_replace(Runs, "//*", ""))
ricking_ponting %>% filter(Dismissal == 'not out')
ricking_ponting
ricking_ponting <- ricking_ponting %>% mutate(TrueRuns = str_replace(Runs, "//*", ""))
ricking_ponting %>% filter(Dismissal == 'not out')
ricking_ponting <- ricking_ponting %>% mutate(TrueRuns = str_replace(Runs, "/*", ""))
ricking_ponting %>% filter(Dismissal == 'not out')
ricking_ponting <- ricking_ponting %>% mutate(TrueRuns = str_replace(Runs, c("*"), ""))
ricking_ponting %>% filter(Dismissal == 'not out')
ricking_ponting <- ricking_ponting %>% mutate(TrueRuns = str_replace(Runs, c("[*]"), ""))
ricking_ponting %>% filter(Dismissal == 'not out')
ricking_ponting <- ricking_ponting %>% mutate(Runs = str_replace(Runs, c("[*]"), ""))
ricking_ponting %>% filter(Dismissal == 'not out')
ricking_ponting_vi <- ricking_ponting %>% filter(Runs != 'DNB')
not_out_innings <- length(ricking_ponting_vi %>% filter(Dismissal == 'not out'))
total_innings <- length(ricking_ponting_vi)
not_out_innings
total_innings
ricking_ponting_vi
length(ricking_ponting_vi)
dim(ricking_ponting_vi)
not_out_innings <- dim(ricking_ponting_vi %>% filter(Dismissal == 'not out'))[1]
total_innings <- length(ricking_ponting_vi)[1]
total_innings
total_innings <- dim(ricking_ponting_vi)[1]
?filter
# Now we cast the Runs as a numeric table
ricking_ponting_vi %>%mutate_at(vars(Runs), as.numeric)
ricking_ponting_vi
?mutate_at
ricking_ponting_vi %>% summarise(runs_sum = sum(Runs))
ricking_ponting_vi <- ricking_ponting_vi %>%mutate_at(vars(Runs), as.numeric)
ricking_ponting_vi %>% summarise(runs_sum = sum(Runs))
ricking_ponting_vi %>% summarise(runs_sum = sum(Runs), rpi = mean(Runs))
ricking_ponting_vi %>% summarise(runs_sum = sum(Runs), rpi = mean(Runs),
avg = sum(Runs)/(total_innings - not_out_innings))
not_out_innings
ricking_ponting_vi %>% summarise(runs_sum = sum(Runs), rpi = mean(Runs),
avg = sum(Runs)/(total_innings - 29))
library(tidyverse)
# Read the data
ricking_ponting <- read_csv("data/ricking_ponting_test_innings.csv")
# Let's say we want to know the number of innings he's actually batted in
ricking_ponting %>% filter(Runs != 'DNB')
# Now let's say we want his
# 1. Batting average
# 2. Runs per innings (A far more valuable statistic that BA imo)
# The problem is that 'Runs' column has a '*' at the end if
# he was not dismissed. We need to get rid of that
# So we'll use the 'stringr' library to substitute '' for '*'
ricking_ponting <- ricking_ponting %>% mutate(Runs = str_replace(Runs, c("[*]"), ""))
ricking_ponting %>% filter(Dismissal == 'not out')
# Ricking Ponting valid innings
ricking_ponting_vi <- ricking_ponting %>% filter(Runs != 'DNB')
# Batting Average
not_out_innings <- dim(ricking_ponting_vi %>% filter(Dismissal %in% c('not out','retired not out'))[1]
total_innings <- dim(ricking_ponting_vi)[1]
# Now we cast the Runs as a numeric table
ricking_ponting_vi <- ricking_ponting_vi %>%mutate_at(vars(Runs), as.numeric)
ricking_ponting_vi %>% summarise(runs_sum = sum(Runs), rpi = mean(Runs),
avg = sum(Runs)/(total_innings - not_out_innings))
# Ricking Ponting valid innings
ricking_ponting_vi <- ricking_ponting %>% filter(Runs != 'DNB')
# Batting Average
not_out_innings <- dim(ricking_ponting_vi %>% filter(Dismissal == c('not out','retired not out'))[1]
total_innings <- dim(ricking_ponting_vi)[1]
# Now we cast the Runs as a numeric table
ricking_ponting_vi <- ricking_ponting_vi %>%mutate_at(vars(Runs), as.numeric)
ricking_ponting_vi %>% summarise(runs_sum = sum(Runs), rpi = mean(Runs),
avg = sum(Runs)/(total_innings - not_out_innings))
library(tidyverse)
# Read the data
ricking_ponting <- read_csv("data/ricking_ponting_test_innings.csv")
# Let's say we want to know the number of innings he's actually batted in
ricking_ponting %>% filter(Runs != 'DNB')
# Now let's say we want his
# 1. Batting average
# 2. Runs per innings (A far more valuable statistic that BA imo)
# The problem is that 'Runs' column has a '*' at the end if
# he was not dismissed. We need to get rid of that
# So we'll use the 'stringr' library to substitute '' for '*'
ricking_ponting <- ricking_ponting %>% mutate(Runs = str_replace(Runs, c("[*]"), ""))
ricking_ponting %>% filter(Dismissal == 'not out')
# Ricking Ponting valid innings
ricking_ponting_vi <- ricking_ponting %>% filter(Runs != 'DNB')
# Batting Average
not_out_innings <- dim(ricking_ponting_vi %>% filter(Dismissal %in% c('not out','retired not out')))[1]
total_innings <- dim(ricking_ponting_vi)[1]
# Now we cast the Runs as a numeric table
ricking_ponting_vi <- ricking_ponting_vi %>%mutate_at(vars(Runs), as.numeric)
ricking_ponting_vi %>% summarise(runs_sum = sum(Runs), rpi = mean(Runs),
avg = sum(Runs)/(total_innings - not_out_innings))
library(tidyverse)
# Read the data
ricking_ponting <- read_csv("data/ricking_ponting_test_innings.csv")
# Let's say we want to know the number of innings he's actually batted in
ricking_ponting %>% filter(Runs != 'DNB')
# Now let's say we want his
# 1. Batting average
# 2. Runs per innings (A far more valuable statistic that BA imo)
# The problem is that 'Runs' column has a '*' at the end if
# he was not dismissed. We need to get rid of that
# So we'll use the 'stringr' library to substitute '' for '*'
ricking_ponting <- ricking_ponting %>% mutate(Runs = str_replace(Runs, c("[*]"), ""))
ricking_ponting %>% filter(Dismissal == 'not out')
# Ricking Ponting valid innings
ricking_ponting_vi <- ricking_ponting %>% filter(Runs != 'DNB')
# Batting Average
not_out_innings <- dim(ricking_ponting_vi %>% filter(Dismissal %in% c('not out','retired notout')))[1]
total_innings <- dim(ricking_ponting_vi)[1]
# Now we cast the Runs as a numeric table
ricking_ponting_vi <- ricking_ponting_vi %>%mutate_at(vars(Runs), as.numeric)
ricking_ponting_vi %>% summarise(runs_sum = sum(Runs), rpi = mean(Runs),
avg = sum(Runs)/(total_innings - not_out_innings))
dplyr::cummean(ricking_ponting_vi$Runs)
ricky_ponting_vi$cum_rpi <- dplyr::cummean(ricking_ponting_vi$Runs)
add_column(ricking_ponting_vi, dplyr::cummean(ricking_ponting_vi$Runs))
ricking_ponting_rpi_cum <- dplyr::cummean(ricking_ponting_vi$Runs)
add_column(ricking_ponting_vi, rpi_cum = ricking_ponting_rpi_cum)
summary(ricking_ponting_vi)
summary(ricking_ponting_vi$rpi_cum)
ricking_ponting_vi <- add_column(ricking_ponting_vi, rpi_cum = ricking_ponting_rpi_cum)
summary(ricking_ponting_vi$rpi_cum)
ggplot(ricking_ponting_vi, aes(x=rpi_cum)) + geom_histogram()
library(tidyverse)
# Read the data
ricky_ponting <- read_csv("data/ricky_ponting_test_innings.csv")
# Let's say we want to know the number of innings he's actually batted in
ricky_ponting %>% filter(Runs != 'DNB')
# Now let's say we want his
# 1. Batting average
# 2. Runs per innings (A far more valuable statistic that BA imo)
# The problem is that 'Runs' column has a '*' at the end if
# he was not dismissed. We need to get rid of that
# So we'll use the 'stringr' library to substitute '' for '*'
ricky_ponting <- ricky_ponting %>% mutate(Runs = str_replace(Runs, c("[*]"), ""))
ricky_ponting %>% filter(Dismissal == 'not out')
# Ricking Ponting valid innings
ricky_ponting_vi <- ricky_ponting %>% filter(Runs != 'DNB')
# Batting Average
not_out_innings <- dim(ricky_ponting_vi %>% filter(Dismissal %in% c('not out','retired notout')))[1]
total_innings <- dim(ricky_ponting_vi)[1]
# Now we cast the Runs as a numeric table
ricky_ponting_vi <- ricky_ponting_vi %>%mutate_at(vars(Runs), as.numeric)
ricky_ponting_vi %>% summarise(runs_sum = sum(Runs), rpi = mean(Runs),
avg = sum(Runs)/(total_innings - not_out_innings))
# Cumulative RPI
ricky_ponting_rpi_cum <- dplyr::cummean(ricky_ponting_vi$Runs)
ricky_ponting_vi <- add_column(ricky_ponting_vi, rpi_cum = ricky_ponting_rpi_cum)
library(tidyverse)
# Read the data
ricky_ponting <- read_csv("data/ricky_ponting_test_innings.csv")
# Let's say we want to know the number of innings he's actually batted in
ricky_ponting %>% filter(Runs != 'DNB')
# Now let's say we want his
# 1. Batting average
# 2. Runs per innings (A far more valuable statistic that BA imo)
# The problem is that 'Runs' column has a '*' at the end if
# he was not dismissed. We need to get rid of that
# So we'll use the 'stringr' library to substitute '' for '*'
ricky_ponting <- ricky_ponting %>% mutate(Runs = str_replace(Runs, c("[*]"), ""))
ricky_ponting %>% filter(Dismissal == 'not out')
library(tidyverse)
# Read the data
ricky_ponting <- read_csv("data/ricky_ponting_test_innings.csv")
library(tidyverse)
# Read the data
ricky_ponting <- read_csv("data/ricky_ponting_test_innings.csv")
# Let's say we want to know the number of innings he's actually batted in
ricky_ponting %>% filter(Runs != 'DNB')
# Now let's say we want his
# 1. Batting average
# 2. Runs per innings (A far more valuable statistic that BA imo)
# The problem is that 'Runs' column has a '*' at the end if
# he was not dismissed. We need to get rid of that
# So we'll use the 'stringr' library to substitute '' for '*'
ricky_ponting <- ricky_ponting %>% mutate(Runs = str_replace(Runs, c("[*]"), ""))
ricky_ponting %>% filter(Dismissal == 'not out')
# Ricking Ponting valid innings
ricky_ponting_vi <- ricky_ponting %>% filter(Runs != 'DNB')
# Batting Average
not_out_innings <- dim(ricky_ponting_vi %>% filter(Dismissal %in% c('not out','retired notout')))[1]
total_innings <- dim(ricky_ponting_vi)[1]
# Now we cast the Runs as a numeric table
ricky_ponting_vi <- ricky_ponting_vi %>%mutate_at(vars(Runs), as.numeric)
ricky_ponting_vi %>% summarise(runs_sum = sum(Runs), rpi = mean(Runs),
avg = sum(Runs)/(total_innings - not_out_innings))
# Cumulative RPI
ricky_ponting_rpi_cum <- dplyr::cummean(ricky_ponting_vi$Runs)
ricky_ponting_vi <- add_column(ricky_ponting_vi, rpi_cum = ricky_ponting_rpi_cum)
ggplot(ricking_ponting_vi, aes(x=rpi)) + geom_histogram()
ggplot(data=ricky_ponting_vi, aes(x=InnsIndex, y=rpi_cum)) +
geom_bar(stat="identity", width=0.5)
rm(list=ls())
source('~/Personal Projects/Cricket/ricking_ponting_summary.R')
